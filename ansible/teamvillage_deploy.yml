#!/usr/bin/env ansible-playbook
---

- name: Vagrant single instance deployment
  hosts: all

  vars:
    home: /var/www
    database: tv_production
    rails_env: production
    rails_command_env:
      RAILS_ENV: production
    project: teamvillage
    revision: master
    clone_url: git@github.com:chuvayva/teamvillage.git

  tasks:
    # pg
    - apt: pkg={{ item }} update_cache=yes cache_valid_time=3600
      sudo: true
      with_items: 
        - python-pycurl
        - python-psycopg2
    - apt_key: url=http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc
      sudo: true
    - apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main'
      sudo: true
    - apt: pkg={{ item }} update_cache=yes cache_valid_time=3600
      sudo: true
      with_items:
        - postgresql
        - postgresql-contrib

    - postgresql_user: name=postgres password=postgres
      sudo: true
      sudo_user: postgres

    - postgresql_db: name={{ database }}
      sudo: true
      sudo_user: postgres






    # Rails Setup
    - template: src=templates/bash_profile.j2 dest=~/.bash_profile

    - apt_repository: repo={{ item }}
      sudo: true
      with_items:
        - "ppa:chris-lea/node.js"
        - "ppa:brightbox/ruby-ng"

    - name: install apt packages
      apt: pkg={{ item }} update_cache=yes cache_valid_time=3600
      sudo: true
      with_items:
        - git-core
        - curl
        - zlib1g-dev
        - build-essential
        - libssl-dev
        - libreadline-dev
        - libyaml-dev
        - libsqlite3-dev
        - libxml2-dev
        - libxslt1-dev
        - libcurl4-openssl-dev
        - python-software-properties
        - libffi-dev

        # key forwarding for rails user via socket permission
        - acl
        # for app
        - ruby2.0
        - nodejs
        - nginx
        # for bundle
        - make
        - ruby2.0-dev
        - libpq-dev
        - g++

    - file: src=/usr/bin/{{ item }}2.0 dest=/usr/bin/{{ item }} state=link
      with_items: [ruby, gem, irb]
      sudo: true

    - gem: name=bundler state=present user_install=no
      sudo: true


    - name: Rails User
      user: name=rails
      sudo: true

    - file: path={{home}} state=directory owner=rails group=rails
      sudo: true

    - template: src=templates/etc_init.d_unicorn.j2 dest=/etc/init.d/unicorn-{{ project }} owner=root group=root mode=0755
      sudo: true
      notify: restart unicorn

    - file: path=/tmp/sockets state=directory owner=rails group=rails
      sudo: true

    - template: src=templates/etc_nginx_unicorn.j2 dest=/etc/nginx/sites-available/default
      sudo: true
      notify: reload nginx





    - name: Agent forwarding for rails user
      acl: name={{ item }} etype=user entity=rails permissions=rwx state=present
      with_items:
        - "{{ ansible_env.SSH_AUTH_SOCK | dirname }}"
        - "{{ ansible_env.SSH_AUTH_SOCK }}"
      changed_when: false
      sudo: true
      sudo_user: root

    - git: >
        repo={{ clone_url }}
        dest={{ home }}
        accept_hostkey=yes
        version={{ revision | default('master') }}
      environment:
        SSH_AUTH_SOCK: "{{ ansible_env.SSH_AUTH_SOCK }}"
      sudo: true
      sudo_user: rails

    - command: bundle --deployment --without="test development" chdir={{ home }}
      environment: rails_command_env
      register: result
      changed_when: "'Installing' in result.stdout"
      sudo: true
      sudo_user: rails

    - file: path={{ home }}/{{ item }} state=directory owner=rails group=rails
      sudo: true
      with_items:
        - shared/pids
        - shared/log



    - name: Db migration
      command: ./bin/rake db:migrate chdir={{ home }}
      environment: rails_command_env
      register: result
      changed_when: result.stderr != ''
      sudo: true
      sudo_user: rails

    - name: Assets precompile
      command: ./bin/rake assets:precompile chdir={{ home }}
      environment: rails_command_env
      register: result
      changed_when: result.stderr != ''
      sudo: true
      sudo_user: rails


    - shell: echo "deployed!"
      changed_when: false

  handlers:
    - name: restart unicorn
      service: name=unicorn-{{ project }} state=restarted
      sudo: true

    - name: reload nginx
      service: name=nginx state=reloaded
      sudo: true

