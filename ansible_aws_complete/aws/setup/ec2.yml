- name: Search for Ubuntu AMI
  ec2_ami_search:
    region: "{{ region | default('us-east-1') }}"
    distro: "{{ linux_distribution }}"
    release: "{{ ubuntu_release }}"
    store: "{{ ami_store }}"
    virt: "{{ virutalization_type }}"
    arch: "{{ cpu_architecture }}"
  register: image_id

- name: Create the WebServer Instance
  local_action:
    module: ec2
    region: "{{ region }}"
    group: "{{ sg_webserver_name }}"
    keypair: "{{ key_name }}"
    instance_type: "{{ web_instance_type }}"
    image: "{{ image_id.ami }}"
    vpc_subnet_id: "{{ public_subnet_id }}"
    assign_public_ip: True
    wait: yes
    wait_timeout: 600
    instance_tags: "{{ web_instance_tags }}"
    # for idempotence
    exact_count: "{{ web_instances_number }}"
    count_tag:
      - type: web
  register: web

- set_fact:
    instance_info: "{{ web.instances[0] | default(web.tagged_instances[0]) }}"           # created or loaded

- set_fact:
    instance_public_ip: "{{ instance_info.public_ip }}"
    instance_id: "{{ instance_info.id }}"

- name: Wait for SSH to come up
  local_action:
    module: wait_for
    host: "{{ instance_public_ip }}"
    port: 22
    state: started

- name: Create SSH Group to login dynamically to EC2 Instance(s)
  add_host: 
    hostname: "{{ instance_public_ip }}"
    groupname: tag_type_web

